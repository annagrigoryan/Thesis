1.backup
2.clear duplicates in locations,attractions
3.set parentId ? in locations
4.set ancestors

run attractions import by countryID
5.check attractions duplicates
6.chnage string to int for attraction locId
7.set atractions count+/
maybe cron?
run google 
8.check again isfinaldestinatin
9.crawle new isfinaldestinatin locations attractions
10.set all attractionsCount and attractionsReviewsSum
11.run tripadvsior crawl for all attractions
12.crawl google for attractions
13.crawl google for locations
14.analyse eventful(maybe need for Florence run some script)
15.remove vatican
16.update coordinates (reverse)
17.set data from google and tripadvsiro combined

15.viator import+api,use neraby ids to search attraction,locations can be few ,like rome and vatican, check semi match like St. Peter's Basilica,St PeterÂ’s Basilica
16.ticketmaster

----
+1.clear not needed attracions,locations
+2.set google coordinates coorectly
+3. merge tripadvisor and google data
4.download images
5.set location images as attraction images

6.add to wishlist(save after logged in)
7.comments
8.check categories
9.set category icons
10.set category counts
11.suggest plan
12.downlaod plan
13.friendly urls
14.planner half hours
15.planner tooltip
16.user profile


js to do
1.planner drag item
2.planner drag day
3.polish resize
4.planning date picker date end after day start
5.check mobile
6.mobile planner
7.planner double scroll
8.planner popover
9.planner modalattractions search
----
db.getCollection('viator_tours').find({productName:/.*Colosseum/i})
--
db.getCollection('tripadvisor_locations2').count({attractionsReviewsSum:{$gt:0}}) 

----------
db.getCollection('tripadvisor_locations2').count({isFinalDestination:true,attractionsParsed:{$exists:false},ancestorsTripadvisorIds:{$in:[191]}})
----------------


aggregate(
    {"$group" : { "_id": "$tripadvisorId", "count": { "$sum": 1 } } },
    {"$match": {"_id" :{ "$ne" : null } , "count" : {"$gt": 1} } }, 
    {"$project": {"tripadvisorId" : "$_id", "_id" : 0} }
)
-----
var map = function(){
   if(this.tripadvisorId) {
        emit(this.tripadvisorId, 1);
   }
}

var reduce = function(key, values){
    return Array.sum(values);
}

var res = db.getCollection('tripadvisor_locations2').mapReduce(map, reduce, {out:{ inline : 1}});
db[res.result].find({value: {$gt: 1}}).sort({value: -1});


----

db.getCollection('tripadvisor_locations2').aggregate([
  { $group: {
    _id: { tripadvisorId: "$tripadvisorId" },  
    uniqueIds: { $addToSet: "$_id" },
    count: { $sum: 1 } 
  } }, 
  { $match: { 
    count: { $gte: 2 } 
  } },
  { $sort : { count : -1} },
  { $limit : 10 }
]);

---

var duplicates = [];
db.getCollection('tripadvisor_locations2').aggregate([
  { $group: {
    _id: { tripadvisorId: "$tripadvisorId" },  
    uniqueIds: { $addToSet: "$_id" },
    count: { $sum: 1 } 
  } }, 
  { $match: { 
    count: { $gte: 2 } 
  } },
  { $sort : { count : -1} },
  { $limit : 1 }
]).result.forEach(function(doc) {
    doc.uniqueIds.shift();      // First element skipped for deleting
    doc.uniqueIds.forEach( function(dupId){ 
        duplicates.push(dupId);   // Getting all duplicate ids
        }
    )    
})

// If you want to Check all "_id" which you are deleting else print statement not needed
printjson(duplicates); 


-----
var duplicates = [];
db.getCollection('tripadvisor_locations2').aggregate([
  { $group: {
    _id: { tripadvisorId: "$tripadvisorId" },  
    uniqueIds: { $addToSet: "$_id" },
    count: { $sum: 1 } 
  } }, 
  { $match: { 
    count: { $gte: 2 } 
  } },
  { $sort : { count : -1} }
]).result.forEach(function(doc) {
    doc.uniqueIds.shift();      // First element skipped for deleting
    doc.uniqueIds.forEach( function(dupId){ 
        duplicates.push(dupId);   // Getting all duplicate ids
        }
    )    
})

db.getCollection('tripadvisor_locations2').remove({_id:{$in:duplicates}}) 
----



db.getCollection('tripadvisor_locations2').update(
   {hasSublocations:true},
   { $set: {sublocationsParsed:true }},
   {  multi: true }
)
--------------
db.my_collection.find().forEach( function(obj) {
    obj.my_value= new NumberInt(obj.my_value);
    db.my_collection.save(obj);
});
-----
db.getCollection('attractions2').aggregate([
  { $group: {
    _id: { tripadvisorLocationId: "$tripadvisorLocationId" },  
    count: { $sum: 1 } 
  } }, 
  
  { $sort : { count : -1} }
]);
-----
db.getCollection('attractions2').aggregate([
  { $group: {
    _id: { tripadvisorLocationId: "$tripadvisorLocationId" },  
    sum: { $sum: "$reviewsCount" } 
  } }, 
  
  { $sort : { sum : -1} },
  {$limit:100}
]);
-------------

db.getCollection('attractions2').aggregate([
  { $group: {
    _id: { tripadvisorLocationId: "$tripadvisorLocationId" },  
    sum: { $sum: "$reviewsCount" } 
  } }, 
  
  { $sort : { sum : -1} }
]).result.forEach(function(doc) {

db.getCollection('tripadvisor_locations2').update(
   { tripadvisorId: doc._id.tripadvisorLocationId },
   {
   $set:{attractionsReviewsSum:doc.sum}
    
   }
)
    
})

---------
db.getCollection('attractions2').aggregate([
  { $group: {
    _id: { tripadvisorLocationId: "$tripadvisorLocationId" },  
    count: { $sum: 1 } 
  } }, 
  
  { $sort : { count : -1} },
  {$limit:100}
]).result.forEach(function(doc) {

db.getCollection('tripadvisor_locations2').update(
   { tripadvisorId: doc._id.tripadvisorLocationId },
   {
   $set:{attractionsCount:doc.count}
    
   }
)
    
})

------------------
db.getCollection('attractions2').find( { googleCoordinates :
                         { $near :
                           { $geometry :
                              { coordinates : [  12.4922309 , 41.8902102 ] } ,
                             $maxDistance : 500
                      } } } )
					  
					  
= -----------------------
var METERS_PER_MILE = 1609.34

db.getCollection('attractions2').find({ googleCoordinates:
    { $nearSphere: { $geometry: { type: "Point", coordinates: [  12.4922309 , 41.8902102 ] }, $maxDistance: 5 * METERS_PER_MILE } } })
    
    -----------------------------
	db.runCommand( {
   geoNear: "attractions2" ,
   near: { type: "Point" , coordinates: [ 12.4922309 , 41.8902102 ] } ,
   spherical: true
} )

-------------------
db.getCollection('tripadvisor_locations2').find({googleCoordinates:{$exists:true}}).forEach( function(obj) {
    var oldlatitude = obj.googleCoordinates.latitude;
    var oldlongitude = obj.googleCoordinates.longitude;
    obj.googleCoordinates.longitude = oldlatitude;
    obj.googleCoordinates.latitude = oldlongitude;
    db.getCollection('tripadvisor_locations2').save(obj);
});
-------------
db.getCollection('eventful_events').aggregate( 
 [
      { $unwind : "$linkDomains" },
      {
        $group : {
          _id : '$linkDomains',
          count: { $sum: 1 }
        }
      },
       {$sort: {count:-1}}
   ]
)
---------------
db.getCollection('attractions2').find({tripadvisorLocationId:187793}).forEach( function(obj) {
   obj.locationId = "56d5fdd8449ec11c060004c3";
   obj.tripadvisorLocationId = 187791;
    db.getCollection('attractions2').save(obj);
});

------------
 "attractionsReviewsSum" : 344880.0000000000000000,
    "attractionsCount" : 978.0000000000000000,
	---------------------
	db.getCollection('attractions2').createIndex( { googleCoordinates : "2dsphere" } )
	
	---------------------------------
	db.getCollection('attractions2').find({coordinates:{$exists:false},googleCoordinates:{$exists:true}}).forEach( function(obj) {
    var oldlatitude = obj.googleCoordinates.latitude;
    var oldlongitude = obj.googleCoordinates.longitude;
    obj.googleCoordinates.longitude = oldlatitude;
    obj.googleCoordinates.latitude = oldlongitude;
	 obj.coordinates = obj.googleCoordinates;
    db.getCollection('attractions2').save(obj);
});
	
	----------------------------
	db.getCollection('attractions2').find({coordinates:{$exists:false},googleCoordinates:{$exists:true}}).forEach( function(obj) {
    obj.coordinates = obj.googleCoordinates;
    db.getCollection('attractions2').save(obj);
});
------------
	
	db.getCollection('attractions2').find({coordinates:{$exists:false},googleCoordinates:{$exists:false},tripadvisorCoordinates:{$exists:true}}).forEach( function(obj) {
    obj.coordinates = obj.tripadvisorCoordinates;
    db.getCollection('attractions2').save(obj);
});
---------

db.getCollection('attractions2').update({"coordinates.latitude":null},{$unset: {coordinates:1}},false,true)

-----------
db.getCollection('attractions2').find({locationId: "56d5fdd8449ec11c060004c3"}).forEach( function(obj) {
      obj.reviews2 = obj.56918*obj.rating;
    db.getCollection('attractions2').save(obj);
});


----------------
db.getCollection('tripadvisor_locations2').find({tripadvisorId:{$in:[60763,187147,186338,187791,187497,187309]}}).forEach( function(obj) {
  db.getCollection('tripadvisor_locations').insert(obj);
});
-----------
db.getCollection('attractions2').find({tripadvisorLocationId:{$in:[60763,187147,186338,187791,187497,187309]}}).forEach( function(obj) {
  db.getCollection('attractions').insert(obj);
});


--------------
db.getCollection('attractions').ensureIndex( { locationId : 1 } )
db.getCollection('attractions').ensureIndex( { reviewsCount : 1 } )
db.getCollection('attractions').ensureIndex( { categoryIds : 1 } )

------------
db.getCollection('attractions').find({"openHours.mon":{$elemMatch:{open:{$lte:'06:00'},close:{$gte:'06:00'}}}}).sort({reviewsCount:-1})



---
db.getCollection('attractions').update(
   {length:30},
   { $set: {length:30 }},
   {  multi: true }
)

----

db.getCollection('restaurants').createIndex( { coordinates : "2dsphere" } )
	
	--
	db.getCollection('events').ensureIndex( { startDate : 1 } );
	db.getCollection('attractions').ensureIndex( { reviewsCount : 1 } );
	db.getCollection('tours').ensureIndex( { reviewsCount : 1 } );
	db.getCollection('restaurants').ensureIndex( { reviewsCount : 1 } );
	
	
	----
	
db.getCollection('tours').find({}).forEach( function(obj) {
obj.attractionIdsInTour = obj.attractionIds;
db.getCollection('tours').save(obj);
});

-----

db.getCollection('tours').find({slug:{$in:['london-ghost-tour-by-vintage-bus',
'london-eye-romantic-private-capsule-for-two-with-champagne',
'private-tour-black-taxi-tour-of-london','the-london-showboat-dinner-cruise-on-the-thames-river','london-eye-river-cruise-with-optional-standard-london-eye-ticket',
'london-vintage-bus-tour-including-river-thames-cruise-with-optional-lunch','london-thames-river-jazz-lunch-cruise','london-eye-ticket-with-skip-the-line','rome-tiber-river-night-cruise-with-dinner'
,'rome-night-segway-tour','rome-segway-tour','rome-segway-tour-villa-borghese',
'small-group-segway-tour-panoramic-night-tour-of-rome','seine-river-cruise-and-paris-illuminations-tour','seine-river-cruise-and-paris-canals-tour','bateaux-parisiens-seine-river-lunch-cruise-with-live-music',
'seine-river-cruise-sightseeing-with-optional-aperitif-or-snack','eiffel-tower-seine-river-cruise-and-paris-illuminations-night-tour','seine-river-cruise-paris-illuminations-and-dinner-on-the-champs-elysees',
'paris-city-tour-seine-river-cruise-and-eiffel-tower','viator-vip-nyc-night-helicopter-flight-and-statue-of-liberty-cruise',
'manhattan-harbor-cruise','bateaux-new-york-dinner-cruise','circle-line-nyc-liberty-cruise','new-york-helicopter-flight-grand-island',
'private-horse-and-carriage-ride-in-central-park','new-york-manhattan-scenic-helicopter-tour',
'manhattan-sky-tour-new-york-helicopter-flight','top-of-the-rock-observation-deck-new-york','munich-bike-tour-with-optional-konigsplatz-and-olympiapark-visit',
'third-reich-bike-tour-in-munich','private-tour-munich-segway-tour-including-chinese-tower-beer-garden','munich-segway-tour-during-oktoberfest',
'munich-super-saver-city-bike-tour-plus-bavarian-beer-and-food-evening','munich-by-night-and-dinner-at-hofbrauhaus','munich-bike-tour','barcelona-electric-bike-tour-montjuic-gaudi-or-bohemian-neighborhoods-experience'
,'barcelona-segway-tour','barcelona-shore-excursion-barcelona-city-hop-on-hop-off-tour','barcelona-hop-on-hop-off-tour-north-to-south-route','barcelona-hop-on-hop-off-tour-east-to-west-route','barcelona-half-day-bike-tour'
]}}).forEach( function(obj) {
obj.attractionIdsInTour = [];
db.getCollection('tours').save(obj);
});



----------

db.getCollection('tours').update(
  {slug:'skip-the-line-vatican-museums-and-sistine-chapel-tour'},
   { $set: {attractionIdsInTour: [ 
   "56d66a61449ec1f408000868",
"56d66a5d449ec1f408000862",
        "56d66a61449ec1f408000867", 
        "56d66a60449ec1f408000866", 
        "56d66a61449ec1f408000868", 
        "56d66883449ec1f4080004dd", 
        "56d66a5e449ec1f408000863", 
        "56d6687a449ec1f4080004c7", 
        "56d66a33449ec1f408000822", 
        "56d668d1449ec1f40800058d", 
        "56d66907449ec1f4080005ff"
    ] }},
   {  multi: true }
);

db.getCollection('tours').update(
  {slug:'skip-the-line-vatican-museums-with-st-peter-s-sistine-chapel-and-small-group-upgrade'},
   { $set: {attractionIdsInTour: [ 
   "56d66a61449ec1f408000868",
"56d66a5d449ec1f408000862",
         "56d66a61449ec1f408000867", 
        "56d66a60449ec1f408000866", 
        "56d66a5e449ec1f408000863"
    ] }},
   {  multi: true }
);

db.getCollection('tours').update(
  {slug:'skip-the-line-vatican-museums-sistine-chapel-and-st-peter-s-basilica-half-day-walking-tour'},
   { $set: {attractionIdsInTour: [ 
"56d66a5d449ec1f408000862",
   "56d66a61449ec1f408000867", 
        "56d66a60449ec1f408000866", 
        "56d66a61449ec1f408000868", 
        "56d66a5e449ec1f408000863"
    ] }},
   {  multi: true }
);

db.getCollection('tours').update(
  {slug:'top-of-the-rock-observation-deck-new-york'},
   { $set: {attractionIdsInTour: [    ] }},
   {  multi: true }
);


db.getCollection('tours').update(
  {slug:'new-york-city-casual-dining-cruise'},
   { $set: {attractionIdsInTour: [    ] }},
   {  multi: true }
);

db.getCollection('tours').update(
  {slug:'manhattan-sky-tour-new-york-helicopter-flight'},
   { $set: {attractionIdsInTour: [    ] }},
   {  multi: true }
);

db.getCollection('tours').update(
  {slug:'london-eye-ticket-with-skip-the-line'},
   { $set: {attractionIdsInTour: [  "56dea660b023dfc8527b2a23"  ] }},
   {  multi: true }
);

---------
db.getCollection('attractions').find( { wikipediaUrl: { $exists:true,$ne:'' ,$not: /.*en.*/ } } );

db.getCollection('attractions').find( { wikipediaUrl: { $exists:true,$ne:''}}).forEach( function(obj) {
    obj.settings.wikipediaId = obj.wikipediaUrl;
	 obj.settings.wikipediaId = obj.settings.wikipediaId.replace("https://","http://");
	 obj.settings.wikipediaId = obj.settings.wikipediaId.replace("http://en.wikipedia.org/wiki/","");
	 obj.settings.wikipediaId = obj.settings.wikipediaId.replace("/","");
    db.getCollection('attractions').save(obj);
});

----
db.getCollection('plans').ensureIndex( { reviewsCount : 1 } );
db.getCollection('plans').ensureIndex( { daysCount : 1 } );
--
db.getCollection('events').ensureIndex( { slug : 1 } );
db.getCollection('attractions').ensureIndex( { slug : 1 } );
db.getCollection('locations').ensureIndex( { slug : 1 } );
db.getCollection('plans').ensureIndex( { slug : 1 } );
db.getCollection('restaurants').ensureIndex( { slug : 1 } );
db.getCollection('tours').ensureIndex( { slug : 1 } );

db.getCollection('reviews').ensureIndex( { isActive : 1 } );
db.getCollection('reviews').ensureIndex( { entityType : 1 } );
db.getCollection('reviews').ensureIndex( { entityId : 1 } );

db.getCollection('tours').ensureIndex( { attractionIds : 1 } );
db.getCollection('tours').ensureIndex( { locationId : 1 } );

db.getCollection('plans').ensureIndex( { isTemplate : 1 } );

db.getCollection('restaurants').ensureIndex( { locationId : 1 } );

db.getCollection('attractions').ensureIndex( { locationId : 1 } );

db.getCollection('plans').ensureIndex( { locationId : 1 } );

db.getCollection('events').ensureIndex( { locationId : 1 } );
db.getCollection('events').ensureIndex( { startDate : 1 } );

db.getCollection('locations').ensureIndex( { isFinalDestination : 1 } );
db.getCollection('locations').ensureIndex( { attractionsReviewsSum : 1 } );

	
	
	------------
	db.getCollection('attractions').find({mainImageLocal:{$exists:false},imagesLocal:{$exists:true}})
	
	
	
	-----------------
	
	db.getCollection('attractions').copyTo('tripadvisor_attractions');
	
		db.getCollection('tripadvisor_locations').find({'settings.tripadvisorId':{$exists:false}}).forEach( function(obj) {
    obj.settings.tripadvisorId = new NumberInt(obj.tripadvisorId);
    db.getCollection('tripadvisor_locations').save(obj);
});
db.getCollection('tripadvisor_locations').find({'externalData':{$exists:false}}).forEach( function(obj) {
    obj.externalData = {tripadvisorIds:[new NumberInt(obj.settings.tripadvisorId)]};
    db.getCollection('tripadvisor_locations').save(obj);
});

	db.getCollection('tripadvisor_attractions').find({'settings.tripadvisorId':{$exists:false}}).forEach( function(obj) {
    obj.settings.tripadvisorId = new NumberInt(obj.tripadvisorId);
    db.getCollection('tripadvisor_attractions').save(obj);
});


db.getCollection('tripadvisor_attractions').find({'externalData':{$exists:false}}).forEach( function(obj) {
    obj.externalData = {tripadvisorIds:[new NumberInt(obj.settings.tripadvisorId)]};
    db.getCollection('tripadvisor_attractions').save(obj);
});

db.getCollection('tripadvisor_attractions').find({'externalData':{$exists:true}}).forEach( function(obj) {
    obj.externalData.tripadvisorIds = [new NumberInt(obj.tripadvisorId)];
    db.getCollection('tripadvisor_attractions').save(obj);
});


----
db.getCollection('tripadvisor_locations').count({'settings.tripadvisorImportedAt':{$exists:false}})
db.getCollection('tripadvisor_locations').count({'settings.tripadvisorattractionImportedAt':{$exists:true}})

db.getCollection('tripadvisor_locations').count({'isFinalDestination':true, 'settings.tripadvisorattractionImportedAt':{$exists:false},'rawData.tripadvisor.ancestorsIds':{$in:[187144]}});


db.getCollection('tripadvisor_locations').count({'isFinalDestination':{$exists:false},'rawData.tripadvisor.ancestorsIds':{$in:[187144]}});


db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_1');
db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_1');

db.getCollection('tripadvisor_locations').ensureIndex( { isFinalDestination : 1 } );
db.getCollection('tripadvisor_locations').ensureIndex( { attractionsReviewsSum : 1 } );
db.getCollection('tripadvisor_locations').ensureIndex( { slug : 1 } );

db.getCollection('tripadvisor_attractions').ensureIndex( { locationId : 1 } );
db.getCollection('tripadvisor_attractions').ensureIndex( { reviewsCount : 1 } );
db.getCollection('tripadvisor_attractions').ensureIndex( { categoryIds : 1 } );
db.getCollection('tripadvisor_attractions').ensureIndex( { slug : 1 } );
db.getCollection('tripadvisor_attractions').ensureIndex( { coordinates : "2dsphere" } );

	
------
db.getCollection('tripadvisor_locations').count({'settings.tripadvisorImportedAt':{$exists:false}})
db.getCollection('tripadvisor_locations').count({'settings.tripadvisorattractionImportedAt':{$exists:true}})

db.getCollection('tripadvisor_locations').count({'isFinalDestination':true, 'settings.tripadvisorattractionImportedAt':{$exists:false},'rawData.tripadvisor.ancestorsIds':{$in:[187144]}});


db.getCollection('tripadvisor_locations').count({'isFinalDestination':{$exists:false},'rawData.tripadvisor.ancestorsIds':{$in:[187144]}});


db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_1');
db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_1');

db.getCollection('tripadvisor_attractions').count({'settings.tripadvisorImportedAt':{$exists:false}})



db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_2');


db.getCollection("tripadvisor_locations").find({"settings.tripadvisorattractionImportedAt":{$gt:new Date(Date.now() - 24*60*60 * 1000)}})



db.getCollection("tripadvisor_locations").find({"settings.tripadvisorattractionImportedAt":{$gt:new Date(Date.now() - 24*60*60 * 1000)}}).forEach( function(obj) {
obj.settings.tripadvisorattractionPageParsed = 1;
delete obj.settings.tripadvisorattractionImportedAt;

db.getCollection('tripadvisor_locations').save(obj);
});


db.getCollection('tripadvisor_attractions').update( {'externalData.tripadvisorattractionIds':{$exists:true}}, { $rename: { "externalData.tripadvisorattractionIds": "externalData.tripadvisorIds" } },false,true) 
db.getCollection('tripadvisor_attractions').update( {'rawData.tripadvisorattraction':{$exists:true}}, { $rename: { "rawData.tripadvisorattraction": "rawData.tripadvisor" } },false,true) 


db.getCollection('tripadvisor_locations').count({'settings.tripadvisorImportedAt':{$exists:false}})
db.getCollection('tripadvisor_locations').count({'settings.tripadvisorattractionImportedAt':{$exists:true}})

db.getCollection('tripadvisor_locations').count({'isFinalDestination':true, 'settings.tripadvisorattractionImportedAt':{$exists:false},'rawData.tripadvisor.ancestorsIds':{$in:[187144]}});


db.getCollection('tripadvisor_locations').count({'isFinalDestination':{$exists:false},'rawData.tripadvisor.ancestorsIds':{$in:[187144]}});


db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_1');
db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_1');

db.getCollection('tripadvisor_attractions').count({'settings.tripadvisorImportedAt':{$exists:false}})

db.getCollection('tripadvisor_attractions').count({})



db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_2');


db.getCollection("tripadvisor_locations").find({"settings.tripadvisorattractionImportedAt":{$gt:new Date(Date.now() - 24*60*60 * 1000)}})

db.getCollection("tripadvisor_locations").count({"isFinalDestination":true, "settings.tripadvisorattractionImportedAt":{$exists:false}})



db.getCollection("tripadvisor_locations").find({"settings.tripadvisorattractionImportedAt":{$gt:new Date(Date.now() - 24*60*60 * 1000)}}).forEach( function(obj) {
obj.settings.tripadvisorattractionPageParsed = 1;
delete obj.settings.tripadvisorattractionImportedAt;

db.getCollection('tripadvisor_locations').save(obj);
});


db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_3');
db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_3');


db.getCollection('tripadvisor_attractions').aggregate(
    {"$group" : { "_id": "$name", "count": { "$sum": 1 } } },
    {"$match": {"_id" :{ "$ne" : null } , "count" : {"$gt": 1} } }, 
    {"$project": {"name" : "$_id", "_id" : 0} }
)

db.getCollection('tripadvisor_attractions').aggregate( 
 [
      { $unwind : "$externalData.tripadvisorIds" },
      {
        $group : {
          _id : '$externalData.tripadvisorIds',
          count: { $sum: 1 }
        }
      },
	  {"$match": {"_id" :{ "$ne" : null } , "count" : {"$gt": 1} } }, 
    
       {$sort: {count:-1}}
   ]
)


db.getCollection('tripadvisor_attractions').update( {'externalData.tripadvisorattractionIds':{$exists:true}}, { $rename: { "externalData.tripadvisorattractionIds": "externalData.tripadvisorIds" } },false,true) 
db.getCollection('tripadvisor_attractions').update( {'rawData.tripadvisorattraction':{$exists:true}}, { $rename: { "rawData.tripadvisorattraction": "rawData.tripadvisor" } },false,true) 

db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_4');

db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_5');

db.getCollection('tripadvisor_attractions').count({'settings.tripadvisorImportedAt':{$exists:true},
'rawData.tripadvisor.categories':{$exists:false}});

db.getCollection('tripadvisor_attractions').count({'rawData.tripadvisor.categories':{$exists:false}});

db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_6');

211495



db.getCollection('tripadvisor_attractions').update({"rawData.tripadvisor.categories":{$exists:false}},{$unset: {'settings.tripadvisorImportedAt':1}},false,true)



db.getCollection('tripadvisor_attractions').find({'slug': /^\d+$/})

db.getCollection('tripadvisor_locations').find({'slug': /^\d+$/})



db.getCollection('tripadvisor_attractions').copyTo('tripadvisor_attractions_backup_7');


db.getCollection('tripadvisor_locations').find({'name': /^Things.*$/})

db.getCollection('tripadvisor_locations').copyTo('tripadvisor_locations_backup_4');



db.getCollection('locations').renameCollection("locations_old");
db.getCollection('tripadvisor_locations').renameCollection("locations");
db.getCollection('attractions').renameCollection("attractions_old");
db.getCollection('tripadvisor_attractions').renameCollection("attractions");

db.getCollection('tripadvisor_locations').ensureIndex( { isFinalDestination : 1 } );
db.getCollection('tripadvisor_locations').ensureIndex( { attractionsReviewsSum : 1 } );
db.getCollection('tripadvisor_locations').ensureIndex( { slug : 1 } );


-----------
db.getCollection('attractions').aggregate([
  {$match: {locationId:{$in:['58e6c2f78facd99d287d858f']}}},
  {  
      $group: {
    _id: { locationId: "$locationId" },  
    sum: { $sum: "$reviewsCount" } ,
	count: { $sum: 1 } 
  } }
]).result.forEach(function(doc) {
db.getCollection('locations').update(
   { _id: ObjectId(doc._id.locationId) },
   {
   $set:{"attractionsReviewsSum":doc.sum, "attractionsCount": new NumberInt(doc.count)}
    
   }
)
    
})


-----
db.getCollection('attractions').find({tripadvisorLocationId:187793}).forEach( function(obj) {
   obj.locationId = "56d5fdd8449ec11c060004c3";
   obj.tripadvisorLocationId = 187791;
    db.getCollection('attractions').save(obj);
});

--
db.getCollection('attractions').find({slug:/-c$/})


----
db.getCollection('locations').ensureIndex( { enabled : 1 } );

---
db.getCollection('events').ensureIndex( { coordinates : "2dsphere" } )


------
//reset slugs
db.getCollection('locations').update({tripadvisorId:{$nin:[60763,186338,187147,187791,187497,34515,303506,188590,187514,187323,312741,293916,294265,274707,45963,295424,60713,303631,189158,293974,187895,28970,186525,294217,274887,186605,187870,190454,187849,255060,32655,298484,187443,298507,155019,187309,150800,298570,255100,188644,187529,189852,294197,294316,154943,304551,274772,308272,187441,60956,293913,294013,304554,187331,190479,274856,187234,255106,187265,293919,187871,187438,150807,187823,190441,187801,187069,274958,187371,664891,293920,187902,187337,187148,187454,187399,187892,187291,187310,298555,274812,294452,186364,294474,293932,187400,297415,186334,186403,190432,187048,255325,187278,293993,297694,641955,40437,1221512,319772,2015046,293984]}},{$unset: {slug:1}},false,true);
-----

//insert missing
/* 1 */
{
    "_id" : ObjectId("5a6732a5d5aa26fdeb9dee87"),
    "settings" : {
        "tripadvisorId" : NumberLong(12278128),
        "tripadvisorImportedAt" : ISODate("2017-04-08T19:05:22.059Z")
    },
    "createdAt" : ISODate("2017-04-06T14:31:37.112Z"),
    "updatedAt" : ISODate("2018-01-23T09:19:18.755Z"),
    "externalData" : {
        "tripadvisorIds" : [ 
            1.22781e+007
        ]
    },
    "parentId" : "58e657a78facd99d287ba883",
    "name" : "Alappuzha District",
    "tripadvisorId" : NumberLong(12278128),
    "tripadvisorParentId" : NumberLong(297631),
    "isFinalDestination" : false,
    "ancestorsIds" : [ 
        "58e6834a8facd99d287caa6b", 
        "58e698bb8facd99d287cf8c4", 
        "58e657a78facd99d287ba883"
    ],
    "ancestorsTripadvisorIds" : [ 
        NumberLong(2), 
        NumberLong(293860), 
        NumberLong(297631)
    ],
    "rawData" : {
        "tripadvisor" : {
            "id" : NumberLong(12278128),
            "isFinalDestination" : false,
            "name" : "Alappuzha District",
            "ancestorsIds" : [ 
                NumberLong(2), 
                NumberLong(293860), 
                NumberLong(297631)
            ]
        }
    }
}

/* 2 */
{
    "_id" : ObjectId("5a673431d5aa26fdeb9dee88"),
    "settings" : {
        "tripadvisorId" : NumberLong(12289092),
        "tripadvisorImportedAt" : ISODate("2017-04-08T19:05:22.059Z")
    },
    "createdAt" : ISODate("2017-04-06T14:31:37.112Z"),
    "updatedAt" : ISODate("2018-01-23T09:19:18.755Z"),
    "externalData" : {
        "tripadvisorIds" : [ 
            1.22891e+007
        ]
    },
    "parentId" : "58e65a5f8facd99d287bc227",
    "name" : "Kandy District",
    "tripadvisorId" : NumberLong(12289092),
    "tripadvisorParentId" : NumberLong(2467830),
    "isFinalDestination" : false,
    "ancestorsIds" : [ 
        "58e6834a8facd99d287caa6b", 
        "58e698bb8facd99d287cf8cb", 
        "58e65a5f8facd99d287bc227"
    ],
    "ancestorsTripadvisorIds" : [ 
        NumberLong(2), 
        NumberLong(293961), 
        NumberLong(2467830)
    ],
    "coordinates" : {
        "longitude" : 80.6335500000000000,
        "latitude" : 7.2895339999999997
    },
    "rawData" : {
        "tripadvisor" : {
            "id" : NumberLong(12289092),
            "isFinalDestination" : false,
            "latitude" : 7.2895339999999997,
            "longitude" : 80.6335500000000000,
            "name" : "Kandy District",
            "ancestorsIds" : [ 
                NumberLong(2), 
                NumberLong(293961), 
                NumberLong(2467830)
            ]
        }
    }
}

/* 3 */
{
    "_id" : ObjectId("5a673520d5aa26fdeb9dee89"),
    "settings" : {
        "tripadvisorId" : NumberLong(12293512),
        "tripadvisorImportedAt" : ISODate("2017-04-08T19:05:22.059Z")
    },
    "createdAt" : ISODate("2017-04-06T14:31:37.112Z"),
    "updatedAt" : ISODate("2018-01-23T09:19:18.755Z"),
    "externalData" : {
        "tripadvisorIds" : [ 
            12293500.0000000000000000
        ]
    },
    "parentId" : "58e657a78facd99d287ba88c",
    "name" : "Tehri Garhwal District",
    "tripadvisorId" : NumberLong(12293512),
    "tripadvisorParentId" : NumberLong(297686),
    "isFinalDestination" : false,
    "ancestorsIds" : [ 
        "58e6834a8facd99d287caa6b", 
        "58e698bb8facd99d287cf8c4", 
        "58e657a78facd99d287ba88c"
    ],
    "ancestorsTripadvisorIds" : [ 
        NumberLong(2), 
        NumberLong(293860), 
        NumberLong(297686)
    ],
    "coordinates" : {
        "longitude" : 78.6021400000000060,
        "latitude" : 30.3630120000000010
    },
    "rawData" : {
        "tripadvisor" : {
            "id" : NumberLong(12293512),
            "isFinalDestination" : false,
            "latitude" : 30.3630120000000010,
            "longitude" : 78.6021400000000060,
            "name" : "Tehri Garhwal District",
            "ancestorsIds" : [ 
                NumberLong(2), 
                NumberLong(293860), 
                NumberLong(297686)
            ]
        }
    }
}

/* 4 */
{
    "_id" : ObjectId("5a673af6d5aa26fdeb9dee8a"),
    "settings" : {
        "tripadvisorId" : NumberLong(12277209),
        "tripadvisorImportedAt" : ISODate("2017-04-08T19:05:22.059Z")
    },
    "createdAt" : ISODate("2017-04-06T14:31:37.112Z"),
    "updatedAt" : ISODate("2018-01-23T09:19:18.755Z"),
    "externalData" : {
        "tripadvisorIds" : [ 
            1.22772e+007
        ]
    },
    "parentId" : "58e65b3e8facd99d287bca87",
    "name" : "Rabun County",
    "tripadvisorId" : NumberLong(12277209),
    "tripadvisorParentId" : NumberLong(28931),
    "isFinalDestination" : false,
    "ancestorsIds" : [ 
        "58e65b3d8facd99d287bca6e", 
        "58e65b3e8facd99d287bca87"
    ],
    "ancestorsTripadvisorIds" : [ 
        NumberLong(191), 
        NumberLong(28931)
    ],
    "rawData" : {
        "tripadvisor" : {
            "id" : NumberLong(12277209),
            "isFinalDestination" : false,
            "name" : "Rabun County",
            "ancestorsIds" : [ 
                NumberLong(191), 
                NumberLong(28931)
            ]
        }
    }
}

/* 5 */
{
    "_id" : ObjectId("5a673b8cd5aa26fdeb9dee8b"),
    "settings" : {
        "tripadvisorId" : NumberLong(12324125),
        "tripadvisorImportedAt" : ISODate("2017-04-08T19:05:22.059Z")
    },
    "createdAt" : ISODate("2017-04-06T14:31:37.112Z"),
    "updatedAt" : ISODate("2018-01-23T09:19:18.755Z"),
    "externalData" : {
        "tripadvisorIds" : [ 
            1.23241e+007
        ]
    },
    "parentId" : "58e65b3e8facd99d287bca8e",
    "name" : "Davidson County",
    "tripadvisorId" : NumberLong(12324125),
    "tripadvisorParentId" : NumberLong(28963),
    "isFinalDestination" : false,
    "ancestorsIds" : [ 
        "58e65b3d8facd99d287bca6e", 
        "58e65b3e8facd99d287bca8e"
    ],
    "ancestorsTripadvisorIds" : [ 
        NumberLong(191), 
        NumberLong(28963)
    ],
    "coordinates" : {
        "longitude" : -86.7874400000000040,
        "latitude" : 36.1723629999999970
    },
    "rawData" : {
        "tripadvisor" : {
            "id" : NumberLong(12324125),
            "isFinalDestination" : false,
            "latitude" : 36.1723629999999970,
            "longitude" : -86.7874400000000040,
            "name" : "Davidson County",
            "ancestorsIds" : [ 
                NumberLong(191), 
                NumberLong(28963)
            ]
        }
    }
}

/* 6 */
{
    "_id" : ObjectId("5a673c0ed5aa26fdeb9dee8c"),
    "settings" : {
        "tripadvisorId" : NumberLong(12277478),
        "tripadvisorImportedAt" : ISODate("2017-04-08T19:05:22.059Z")
    },
    "createdAt" : ISODate("2017-04-06T14:31:37.112Z"),
    "updatedAt" : ISODate("2018-01-23T09:19:18.755Z"),
    "externalData" : {
        "tripadvisorIds" : [ 
            1.22775e+007
        ]
    },
    "parentId" : "58e698b98facd99d287cf8b0",
    "name" : "Binyamin Region",
    "tripadvisorId" : NumberLong(12277478),
    "tripadvisorParentId" : NumberLong(6697292),
    "isFinalDestination" : false,
    "ancestorsIds" : [ 
        "58e6834a8facd99d287caa6a", 
        "58e6978d8facd99d287cf4e6", 
        "58e698b98facd99d287cf8b0"
    ],
    "ancestorsTripadvisorIds" : [ 
        NumberLong(21), 
        NumberLong(660378), 
        NumberLong(6697292)
    ],
    "coordinates" : {
        "longitude" : 35.2697640000000020,
        "latitude" : 31.9162670000000010
    },
    "rawData" : {
        "tripadvisor" : {
            "id" : NumberLong(12277478),
            "isFinalDestination" : false,
            "latitude" : 31.9162670000000010,
            "longitude" : 35.2697640000000020,
            "name" : "Binyamin Region",
            "ancestorsIds" : [ 
                NumberLong(21), 
                NumberLong(660378), 
                NumberLong(6697292)
            ]
        }
    }
}

-------------------
db.getCollection('locations').aggregate( [
   { $group: { _id: { tripadvisorId: "$tripadvisorId" },
               count: { $sum: 1 } } },
   { $match: { count: { $gt: 1 } } }
] )
--------------
db.getCollection('locations').ensureIndex( { coordinates : "2dsphere" } );
---------
db.getCollection('images').ensureIndex( { filePath : 1 } );
db.getCollection('images').ensureIndex( { originalUrl : 1 } );
db.getCollection('images').ensureIndex( { entityId : 1 } );
db.getCollection('images').ensureIndex( { entityType : 1 } );
db.getCollection('images').ensureIndex( { maxSize : 1 } );
db.getCollection('images').ensureIndex( { enabled : 1 } );

---
db.getCollection('reviews').ensureIndex( { isActive : 1 } );
db.getCollection('reviews').ensureIndex( { entityType : 1 } );
db.getCollection('reviews').ensureIndex( { entityId : 1 } );
db.getCollection('reviews').ensureIndex( { createdAt : 1 } );
db.getCollection('reviews').ensureIndex( { source : 1 } );

----
db.getCollection('hotels').ensureIndex( { locationId : 1 } )
db.getCollection('hotels').ensureIndex( { reviewsCount : 1 } )
db.getCollection('hotels').ensureIndex( { categoryIds : 1 } )
db.getCollection('hotels').ensureIndex( { slug : 1 } )
